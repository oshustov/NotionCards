// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotionCards.Storage;

#nullable disable

namespace NotionCards.Core.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotionCards.Core.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("BackText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrontText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceKind")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedTime")
                        .IsDescending();

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("Box");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.BoxCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("LeitnerBoxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeitnerBoxId");

                    b.ToTable("BoxCard");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.NotionDbPull", b =>
                {
                    b.Property<string>("NotionDbId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastRecordDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("NotionDbId");

                    b.ToTable("NotionDbPulls");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.NotionDbSetup", b =>
                {
                    b.Property<string>("NotionDbId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FieldMappings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotionDbName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("PullingInterval")
                        .HasColumnType("time");

                    b.HasKey("NotionDbId");

                    b.ToTable("NotionDbs");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.UserSetState", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.Property<int>("LastRequest")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SetId");

                    b.HasIndex("UserId", "SetId");

                    b.ToTable("UserSetState");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Box", b =>
                {
                    b.HasOne("NotionCards.Core.Entities.Set", "Set")
                        .WithMany("Boxes")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Set");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Set", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
