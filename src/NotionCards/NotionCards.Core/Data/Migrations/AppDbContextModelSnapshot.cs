// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotionCards.Storage;

#nullable disable

namespace NotionCards.Core.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotionCards.Core.Entities.LearningPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LearningPlans");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.LearningPlanQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LearningPlanId")
                        .HasColumnType("int");

                    b.Property<int>("ProgressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningPlanId");

                    b.ToTable("LearningPlanQuestion");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.NotionDbImportHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastOperation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("NotionDbId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotionDbId")
                        .IsUnique();

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.NotionDbRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotionId")
                        .IsUnique();

                    b.ToTable("NotionDbRecords");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Progress", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId", "QuestionId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Progress");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("LearnPlanQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("NotionDbRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearnPlanQuestionId");

                    b.HasIndex("NotionDbRecordId");

                    b.ToTable("QuestionAnswer");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.LearningPlanQuestion", b =>
                {
                    b.HasOne("NotionCards.Core.Entities.LearningPlan", "LearningPlan")
                        .WithMany("Questions")
                        .HasForeignKey("LearningPlanId");

                    b.Navigation("LearningPlan");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.Progress", b =>
                {
                    b.HasOne("NotionCards.Core.Entities.QuestionAnswer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotionCards.Core.Entities.LearningPlanQuestion", "Question")
                        .WithOne("Progress")
                        .HasForeignKey("NotionCards.Core.Entities.Progress", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.QuestionAnswer", b =>
                {
                    b.HasOne("NotionCards.Core.Entities.LearningPlanQuestion", "LearnPlanQuestion")
                        .WithMany("Answers")
                        .HasForeignKey("LearnPlanQuestionId");

                    b.HasOne("NotionCards.Core.Entities.NotionDbRecord", "NotionDbRecord")
                        .WithMany()
                        .HasForeignKey("NotionDbRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearnPlanQuestion");

                    b.Navigation("NotionDbRecord");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.LearningPlan", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("NotionCards.Core.Entities.LearningPlanQuestion", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Progress")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
